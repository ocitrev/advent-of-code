---
AccessModifierOffset: -4
AlignAfterOpenBracket: DontAlign
AlignConsecutiveAssignments: false
AlignConsecutiveDeclarations: false
AlignEscapedNewlinesLeft: false
AlignOperands: false
AlignTrailingComments: true
AllowAllArgumentsOnNextLine: false
AllowAllParametersOfDeclarationOnNextLine: false
AllowShortBlocksOnASingleLine: false
AllowShortCaseLabelsOnASingleLine: false
AllowShortFunctionsOnASingleLine: false
AllowShortIfStatementsOnASingleLine: false
AllowShortLambdasOnASingleLine: false
AllowShortLoopsOnASingleLine: false
AlwaysBreakAfterDefinitionReturnType: None
AlwaysBreakAfterReturnType: None
AlwaysBreakBeforeMultilineStrings: true
AlwaysBreakTemplateDeclarations: true
AttributeMacros: ['__declspec', '__stdcall', '__pragma']
BinPackArguments: true
BinPackParameters: true
BreakBeforeBraces: Custom
BraceWrapping:
    AfterCaseLabel: true
    AfterClass: true
    AfterControlStatement: Always
    AfterEnum: true
    AfterExternBlock: true
    AfterFunction: true
    AfterNamespace: true
    AfterStruct: true
    AfterUnion: true
    BeforeCatch: true
    BeforeElse: true
    BeforeLambdaBody: true
    BeforeWhile: true
    IndentBraces: false
    SplitEmptyFunction: true
    SplitEmptyNamespace: true
    SplitEmptyRecord: true
BreakBeforeBinaryOperators: NonAssignment
BreakConstructorInitializersBeforeComma: true
ColumnLimit: 120
PenaltyExcessCharacter: 2
CompactNamespaces: true
EmptyLineBeforeAccessModifier: LogicalBlock
FixNamespaceComments: false
IndentCaseLabels: true
IndentPPDirectives: None
IndentWidth: 4
InsertBraces: true
NamespaceIndentation: All
PointerAlignment: Right
QualifierAlignment: Right
ReflowComments: true
SpaceBeforeParens: ControlStatementsExceptControlMacros
SpacesBeforeTrailingComments: 1
SpacesInContainerLiterals: false
SpacesInParentheses: false

# not supported in VS yet
SortUsingDeclarations: Lexicographic
InsertNewlineAtEOF: true
# LineEnding: CRLF
IntegerLiteralSeparator:
  Binary: 0
  DecimalMinDigits: 5
  Decimal: 3
  Hex: -1
---
Language: Cpp
Standard: Cpp11
Cpp11BracedListStyle: true
ConstructorInitializerAllOnOneLineOrOnePerLine: false
IncludeBlocks: Regroup
IncludeCategories:
# precompiled headers are always first
 - Regex:    'stdafx\.h|pch\.h"$'
   CaseSensitive: false
   Priority: -1
# try to detect #import with *.tlb, or *.dll, or *.ocx and put them at the end
 - Regex: '\.(tlb|dll|ocx)[">]'
   CaseSensitive: false
   Priority: 100
# resources at the end
 - Regex:   'resources?\.h'
   CaseSensitive: false
   Priority: 10
# warning header
 - Regex: 'enable-warnings.h"$'
   Priority: 5
   SortPriority: 5
# other projects: #include "project/file.h"
 - Regex:    '^".+(/|\\)'
   Priority: 2
# WinSock2.h must be included before Windows.h
 - Regex:    '^<winsock2\.h>$'
   CaseSensitive: false
   Priority: 4
   SortPriority: 2
# Windows header
 - Regex:    '^<windows\.h>$'
   CaseSensitive: false
   Priority: 4
   SortPriority: 3
# cpp standard library: #include <...>
 - Regex:    '^<.+'
   Priority: 4
# local items
 - Regex:    '.*'
   Priority: 1
IncludeIsMainRegex: "(-[a-zA-Z0-9]+|[0-9])?$"
MacroBlockBegin: "^(BEGIN_.+_MAP|BEGIN_INTERFACE.+|BEGIN_TEST_.+_ATTRIBUTE)$"
MacroBlockEnd: "^(END_.+_MAP|END_INTERFACE.+|END_TEST_.+_ATTRIBUTE)$"
SpaceAfterCStyleCast: false
SortIncludes: CaseInsensitive
WhitespaceSensitiveMacros: ['GSL_SUPPRESS', 'BROWSABLE', 'READ_ONLY']
# hack pour les macros de unit tests
ForEachMacros: [TEST_CLASS, TEST_METHOD]
---
Language: CSharp
---
Language: JavaScript
BreakBeforeBraces: Attach
---
Language: Json
BreakBeforeBraces: Attach
IndentWidth: 2
MaxEmptyLinesToKeep: 0
---
Language: ObjC
...
